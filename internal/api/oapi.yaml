openapi: "3.0.0"
info:
  version: 1.0.0
  title: GitFusion API server
paths:
  /api/v1/repositories:
    get:
      summary: List repositories
      operationId: listRepositories
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/gitServerParam'
        - $ref: '#/components/parameters/repoOwnerParam'
        - $ref: '#/components/parameters/repoNameQueryParam'
      responses:
        '200':
          description: A list of repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoriesResponse'
        '400':
          description: Bad request due to invalid parameters or missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access due to invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/repository:
    get:
      summary: Get detailed information for a specific repository
      operationId: getRepository
      tags:
        - Repositories
      parameters:
        - $ref: '#/components/parameters/gitServerParam'
        - $ref: '#/components/parameters/repoOwnerParam'
        - $ref: '#/components/parameters/repoNameParam'
      responses:
        '200':
          description: Detailed information about a repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          description: Git server not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Something went wrong with the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/user/organizations:
    get:
      summary: List organizations for the authenticated user
      operationId: listUserOrganizations
      tags:
        - Organizations
      parameters:
        - $ref: '#/components/parameters/gitServerParam'
      responses:
        '200':
          description: A list of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsResponse'
        '400':
          description: Bad request due to invalid parameters or missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access due to invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/branches:
    get:
      summary: List branches for a repository
      operationId: listBranches
      tags:
        - Branches
      parameters:
        - $ref: '#/components/parameters/gitServerParam'
        - $ref: '#/components/parameters/repoOwnerParam'
        - $ref: '#/components/parameters/repoNameParam'
      responses:
        '200':
          description: A list of branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchesResponse'
        '400':
          description: Bad request due to invalid parameters or missing fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access due to invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  parameters:
    repoNameQueryParam:
      name: repoName
      in: query
      required: false
      description: The name of the repository to search for.
      schema:
        type: string
    gitServerParam:
      name: gitServer
      in: query
      required: true
      description: The Git server name.
      schema:
        type: string
    repoOwnerParam:
      name: owner
      in: query
      required: true
      description: The owner of the repository.
      schema:
        type: string
    repoNameParam:
      name: repoName
      in: query
      required: true
      description: The name of the repository.
      schema:
        type: string
  schemas:
    Owner:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        avatar_url:
          type: string
      required:
        - id
        - name
    Repository:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        owner:
          type: string
        visibility:
          type: string
          enum: [public, private]
        default_branch:
          type: string
      required:
        - id
        - name
    Pagination:
      type: object
      properties:
        total:
          type: integer
      required:
        - total
    RepositoryDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        ssh_url:
          type: string
        http_url:
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
        visibility:
          type: string
          enum: [public, private]
        created_at:
          type: string
          format: date-time
        default_branch:
          type: string
        forks_count:
          type: integer
        stars_count:
          type: integer
      required:
        - id
        - name
    RepositoriesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Repository'
      required:
        - data
    Error:
      type: object
      properties:
        code:
          type: string
          description: A short error code representing the type of error
        message:
          type: string
          description: A human-readable message providing more details about the error
      required:
        - code
        - message
    OrganizationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
      required:
        - data
    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        avatar_url:
          type: string
      required:
        - id
        - name
    Branch:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    BranchesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
      required:
        - data
